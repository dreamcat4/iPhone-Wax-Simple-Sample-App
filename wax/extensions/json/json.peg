Value       <- Spacing Null
             / Spacing Boolean
             / Spacing String
             / Spacing Number
             / Spacing Array
             / Spacing Object

Null        <- "null" Spacing { json_pushNil(); } 

String      <- ["] < ( !["] Char )* > ["] Spacing { json_pushString(yytext); }
Char        <- "\\u" Hex Hex Hex Hex
             / "\\" [bfnrt"\\/]
             / !"\\" .

Number      <- < Integer Fraction ? Exponent ? > Spacing { json_pushNumber(strtod(yytext, NULL)); }
Integer     <- "-" ? Digit +
Fraction    <- "." Digit +
Exponent    <- [Ee] [+\-] ? Digit +
Digit       <- [0-9]

Boolean     <- "true" Spacing { json_pushBoolean(true); } 
             / "false" Spacing { json_pushBoolean(false); }

Array       <- "[" Spacing { json_newArray(); } 
               Members *
               "]" Spacing

Members     <- Member ("," Spacing Member)* "," ? Spacing
Member      <- Value { json_addToArray(); }


Object      <- "{" Spacing { json_newHash(); } 
                Pairs *
               "}" Spacing

Pairs       <- Pair ("," Spacing Pair)* "," ? Spacing
Pair        <- String Spacing ":" Spacing Value { json_addToHash(); }

Hex         <- [0-9a-fA-F]
Spacing     <-  Space *
Space       <- ' ' / '\t' / EndOfLine
EndOfLine   <- '\r\n' / '\n' / '\r'
